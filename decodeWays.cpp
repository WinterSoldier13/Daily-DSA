#include <iostream>
#include <bits/stdc++.h>

using namespace std;

int mem[3000];
void init()
{
    for(int i=0;i<1000;i++)
    {
        mem[i]=-1;
    }
}

int recurse(string s, int index)
{
    if(mem[index]!=-1)
    {
        return mem[index];
    }
    if(index>=s.size())
    {
        return mem[index]=1;
    }

    // first consider only 1 char
    int val1 =0 ;
    if(s[index]!='0')
        val1 = recurse(s,index+1);

    // this time consider 2 chars like 13 -> n
    int val2=0;
    char ch = s[index];
    
    if(index<s.size()-1)
    {
        int d1 = s[index]-'0';
        int d2 = s[index+1]-'0';
        
        int num = d1*10+d2;
        
        if(num>=10 and num<=26)
        {
            val2 = recurse(s, index+2);
        }
    }
    return mem[index]=val1+val2;
}

int numDecodings(string s)
{
    if(s.size()==0)
    {
        return 0;
    }
    if(s.size()==1)
    {
        return 1;
    }
    
    return recurse(s,0);
}

int main()
{
    init();
    string s
    cout<<s.size()<<endl;
    // cout<<numDecodings(s)<<endl;
    
    return 0;
}